steps:
  # Build and push FastAPI container image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "API",
        "-t",
        "us-central1-docker.pkg.dev/$_PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME_FS:$_ENV_API_NAME"
      ]
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "us-central1-docker.pkg.dev/$_PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME_FS:$_ENV_API_NAME"
      ]
  
  # Build and push Streamlit container image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "API/streamlit",
        "-t",
        "us-central1-docker.pkg.dev/$_PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME_ST:$_ENV_ST_NAME"
      ]
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "us-central1-docker.pkg.dev/$_PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME_ST:$_ENV_ST_NAME"
      ]

      
  
  # Update Kubernetes deployment files
  - name: "ubuntu"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        sed -i "s#image: gcr.io/projectname/fastapi-app:latest#image: us-central1-docker.pkg.dev/$_PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME_FS:$_ENV_API_NAME#g" kubernetes/fastapi-deployment.yaml
        sed -i "s#image: gcr.io/projectname/streamlit-app:latest#image: us-central1-docker.pkg.dev/$_PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME_ST:$_ENV_ST_NAME#g" kubernetes/streamlit-deployment.yaml
  
  # Deploy to GKE using kubectl
  - name: "gcr.io/cloud-builders/kubectl"
    args:
      - "apply"
      - "-f"
      - "kubernetes/"
    env:
      - "CLOUDSDK_COMPUTE_ZONE=$_CLUSTER_ZONE"
      - "CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER_NAME"

substitutions:
  _CLUSTER_NAME: "bankprediction"
  _CLUSTER_ZONE: "us-central1"

images:
  - "us-central1-docker.pkg.dev/$_PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME_FS:$_ENV_API_NAME"
  - "us-central1-docker.pkg.dev/$_PROJECT_ID/$_ARTIFACT_REPO/$_IMAGE_NAME_ST:$_ENV_ST_NAME"

options:
  logging: CLOUD_LOGGING_ONLY
